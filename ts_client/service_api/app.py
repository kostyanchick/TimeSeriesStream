import asyncio
import os
import logging
import json

from aiohttp import web

from .config import DATA_FILE_PATH


def read_numbers_from_file():
    """Function is reading data already stored in the log"""
    buffer = []
    if os.path.exists(DATA_FILE_PATH):
        with open(DATA_FILE_PATH, 'r') as file:
            file_content = file.readlines()
            for line in file_content:
                record = json.loads(line)
                buffer.append(record)

    return buffer


# shared list which is generated by data that comes from server
# and used by by web page

# list is initialized from already saved data
# and continuously fulfilled by received from server
# this approach helps to handle cases when client stopped working
buffer_numbers = read_numbers_from_file()

# this loop is used by both api and task for receiving data from server
loop = asyncio.get_event_loop()

logging.basicConfig(level=logging.DEBUG)

app = web.Application(loop=loop)






